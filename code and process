# load Libraries
library(DT)
library(data.table)
library(tidyverse)

# constants from the sales/ customer/ sales rep dataset
Endmonth=8
INR_to_USD=71.84
BRL_to_USD=4.11
Sale_Rep_number=3

# load_data
CustomerData= fread(input = "./Data/Hubspot- Customer Data.csv", verbose = FALSE)
CustomerData=data.table(CustomerData)
SalesData= fread(input = "./Data/Hubspot Sales Data.csv", verbose = FALSE)
SalesData=data.table(SalesData)
SalesRepcostData= fread(input = "./Data/Hubspot- Sales Rep Cost Data.csv", verbose = FALSE)
SalesRepcostData=data.table(SalesRepcostData)
SalesData$Year=as.numeric(substr(SalesData$`Deal Close`,1,4))

# data cleaning

# Filter out Japan
SalesData=SalesData[Country!='Japan']
CustomerData=CustomerData[Country!='Japan']
CustomerData=CustomerData[,1:7]
# Filter out year!=2018
SalesData=SalesData[Year==2018,]
# Format the Month
SalesData$Deal_month=as.numeric(substr(SalesData$`Deal Close`,6,8))
CustomerData$Month_new=as.numeric(substr(CustomerData$Month,1,1))
# Clacualte the Revenue
SalesData$Revenue=(Endmonth-SalesData$Deal_month+1)*SalesData$MRR

# Categorize CompanySize in CustomerData dataset
CustomerData$CompanySize[CustomerData$Employees %in% c("2 to 5","1","2", "4","5","9","10",'16','18','25','11 to 25','6 to 10')]<-"0 to 25"
CustomerData$CompanySize[CustomerData$Employees %in% c("26 to 50")]<-"26 to 50"
CustomerData$CompanySize[CustomerData$Employees %in% c("51 to 200")]<-"51 to 200"
CustomerData$CompanySize[CustomerData$Employees %in% c("201 to 1000",'201 to 1,000')]<-"201 to 1000"
CustomerData$CompanySize[CustomerData$Employees %in% c("1,001 to 10,000",'1001 to 10000','10,0001 or more')]<-"1000 or more"

# Categorize CompanySize in SalesData dataset
SalesData$CompanySize=SalesData$Employees
SalesData$CompanySize[SalesData$Employees %in% c("Undefined")]<-NA
SalesData$CompanySize[SalesData$Employees %in% c("201 to 500",'501 to 1000')]<-"201 to 1000"
SalesData$CompanySize[SalesData$Employees %in% c('1001 or Above')]<-"1000 or more"

# Categorize Industry in CustomerData dataset
CustomerData$Industry_New[CustomerData$Industry %in% c("Information Technology and Services","Information Services","Internet", "Computer & Network Security","Telecommunications",'Computer Software','Computer Hardware')]<-"IT, Computer Software & Hardware"
CustomerData$Industry_New[CustomerData$Industry %in% c("Higher Education","Education Management","E-Learning", "Professional Training & Coaching","Primary/Secondary Education",'Printing','Writing and Editing','Translation and Localization')]<-"Education"
CustomerData$Industry_New[CustomerData$Industry %in% c("Insurance","Venture Capital & Private Equity",'Investment Management', "Accounting","Primary/Secondary Education",'Printing','Writing and Editing','Translation and Localization')]<-"Financial Services"
CustomerData$Industry_New[CustomerData$Industry %in% c("Non-Profit Organization Management","Research",'Investment Management', "Accounting","Market Research",'Think Tanks','Executive Office','Legal Services','Law Practice','Human Resources','Staffing and Recruiting','Human Resources/HR','Marketing and Advertising','Public Relations and Communications','Online Media','Events Services')]<-"Management Consulting"
CustomerData$Industry_New[CustomerData$Industry %in% c("Hospitality","Entertainment/Movie Production",'Sports', "Music","Fine Art",'Design','Entertainment','Leisure, Travel & Tourism','Newspapers','Publishing')]<-"Entertainment & Hospitality"
CustomerData$Industry_New[CustomerData$Industry %in% c("Construction","Building Materials",'Architecture & Planning', "Glass, Ceramics & Concrete","Real Estate",'Commercial Real Estate')]<-"Construction & Real Estate"
CustomerData$Industry_New[CustomerData$Industry %in% c("Outsourcing/Offshoring","Warehousing",'Transportation', "Transportation/Trucking/Railroad","Import and Export")]<-"Logistics and Supply Chain"
CustomerData$Industry_New[CustomerData$Industry %in% c("Retail",'Apparel & Fashion', "Consumer Goods","Luxury Goods & Jewelry",'Wholesale','Cosmetics','Wine and Spirits','Furniture','Business Supplies and Equipment','Ranching','Food Production')]<-"Retail & Wholesale"
CustomerData$Industry_New[CustomerData$Industry %in% c("Medical Devices","Health, Wellness and Fitness",'Hospital & Health Care', "Biotechnology","Pharmaceuticals")]<-"Healthcare"
CustomerData$Industry_New[CustomerData$Industry %in% c("Electrical/Electronic Manufacturing",'Consumer Electronics', "Semiconductors","Machinery",'Automotive','Mechanical or Industrial Engineering','Industrial Automation','Aviation & Aerospace')]<-"Electronic Manufacturing & Machinery"
CustomerData$Industry_New[CustomerData$Industry %in% c("Facilities Services",'Civic & Social Organization', "Utilities","Environmental Services",'Individual & Family Services','Testing Laboratories','Renewables & Environment')]<-"Social Services"

# Categorize Industry in SalesData dataset
SalesData$Industry_New[SalesData$Industry %in% c("Information Technology and Services","Information Services","Internet", "Computer & Network Security","Telecommunications",'Computer Software','Computer Hardware')]<-"IT, Computer Software & Hardware"
SalesData$Industry_New[SalesData$Industry %in% c("Higher Education","Education Management","E-Learning", "Professional Training & Coaching","Primary/Secondary Education",'Printing','Writing and Editing','Translation and Localization')]<-"Education"
SalesData$Industry_New[SalesData$Industry %in% c("Insurance","Venture Capital & Private Equity",'Investment Management', "Accounting","Primary/Secondary Education",'Printing','Writing and Editing','Translation and Localization')]<-"Financial Services"
SalesData$Industry_New[SalesData$Industry %in% c("Non-Profit Organization Management","Research",'Investment Management', "Accounting","Market Research",'Think Tanks','Executive Office','Legal Services','Law Practice','Human Resources','Staffing and Recruiting','Human Resources/HR','Marketing and Advertising','Public Relations and Communications','Online Media','Events Services')]<-"Management Consulting"
SalesData$Industry_New[SalesData$Industry %in% c("Hospitality","Entertainment/Movie Production",'Sports', "Music","Fine Art",'Design','Entertainment','Leisure, Travel & Tourism','Newspapers','Publishing')]<-"Entertainment & Hospitality"
SalesData$Industry_New[SalesData$Industry %in% c("Construction","Building Materials",'Architecture & Planning', "Glass, Ceramics & Concrete","Real Estate",'Commercial Real Estate')]<-"Construction & Real Estate"
SalesData$Industry_New[SalesData$Industry %in% c("Outsourcing/Offshoring","Warehousing",'Transportation', "Transportation/Trucking/Railroad","Import and Export")]<-"Logistics and Supply Chain"
SalesData$Industry_New[SalesData$Industry %in% c("Retail",'Apparel & Fashion', "Consumer Goods","Luxury Goods & Jewelry",'Wholesale','Cosmetics','Wine and Spirits','Furniture','Business Supplies and Equipment','Ranching','Food Production')]<-"Retail & Wholesale"
SalesData$Industry_New[SalesData$Industry %in% c("Medical Devices","Health, Wellness and Fitness",'Hospital & Health Care', "Biotechnology","Pharmaceuticals")]<-"Healthcare"
SalesData$Industry_New[SalesData$Industry %in% c("Electrical/Electronic Manufacturing",'Consumer Electronics', "Semiconductors","Machinery",'Automotive','Mechanical or Industrial Engineering','Industrial Automation','Aviation & Aerospace')]<-"Electronic Manufacturing & Machinery"
SalesData$Industry_New[SalesData$Industry %in% c("Facilities Services",'Civic & Social Organization', "Utilities","Environmental Services",'Individual & Family Services','Testing Laboratories','Renewables & Environment')]<-"Social Services"

# NA imputation
library(DMwR)
# CustomerData2=knnImputation(CustomerData, k = 5, scale = T, meth = "weighAvg", distData = NULL)
CustomerData[Industry=='',]$Industry=NA
CustomerData[Employees=='',]$Employees=NA
CustomerData=centralImputation(CustomerData)
# write.table(CustomerData,'CustomerData_New.csv',row.names=FALSE,col.names=TRUE,sep=",")
# write.table(SalesData,'SalesData_New.csv',row.names=FALSE,col.names=TRUE,sep=",")

#Calculate LTV:CAC ratio

#Revenue Retetion Rate
CustomerData$Retention_Rate=1-(CustomerData$`Ending Revenue`/CustomerData$`Starting Revenue`)^Endmonth
#Revenue
SalesData$Deal_month=as.numeric(substr(SalesData$`Deal Close`,6,8))
SalesData$Revenue=(Endmonth-SalesData$Deal_month+1)*SalesData$MRR
### Revenue_bymonth
Revenue_bymonth=tapply(SalesData$Revenue, SalesData$Deal_month, sum)
Total_revenue=sum(SalesData$Revenue)
## Cost
Bangalore_repsalary=SalesRepcostData[Location=='Bangalore',]$`Total Compensation`/INR_to_USD
SaoPaolo_repsalary=SalesRepcostData[Location=='Sao Paolo',]$`Total Compensation`/BRL_to_USD
Cost_Sales=Sale_Rep_number*(Bangalore_repsalary+SaoPaolo_repsalary)*(Endmonth/12)
Cost_Market=Cost_Sales/0.8*0.2
Total_cost=Cost_Sales+Cost_Market
Cost_bymonth=Total_cost/Endmonth

####-------------------------------
# Count the segmentation
Segmentation=table(CustomerData[,.(Country,CompanySize,Month_new)])
Segmentation=data.table(Segmentation)
## Revenue of the segmentation
Segmentation_revenue=tapply(SalesData$Revenue, SalesData[,.(Country,CompanySize,Deal_month)], sum)
Segmentation_revenue=data.table(Segmentation_revenue,check.names = T)
Segmentation$Revenue=Segmentation_revenue
###------------------------------------------------------------------------------------------------------------ 
#### Assuming that cost is averaged by number of customer
# Cost per customer each month
for(i in seq(1,12,1)){Segmentation$Cost[Segmentation$Month_new==i]=Cost_bymonth/sum(Segmentation$N[Segmentation$Month_new==i])}
Segmentation$Cost=as.numeric(Segmentation$Cost)
# For each segment, ARPC= revenue
Segmentation$ARPC=as.numeric(Segmentation$Revenue/Segmentation$N)
Segmentation$Gross_margin=(Segmentation$ARPC-Segmentation$Cost)/Segmentation$ARPC
## Retention_Rate
Retention_Rate=tapply(CustomerData$Retention_Rate, CustomerData[,.(Country,CompanySize,Month_new)], mean)
Retention_Rate=data.table(Retention_Rate,check.names = T)
Segmentation$Retention_Rate=Retention_Rate
## Calculate the Ratio
Segmentation$LTV=Segmentation$ARPC*Segmentation$Gross_margin/(1-Segmentation$Retention_Rate)
Segmentation$CAC=Segmentation$Cost
Segmentation$health_ratio=Segmentation$LTV/Segmentation$CAC
###---------------------------------------------------------------------------------------------------
Segmentation_after_imputation=centralImputation(Segmentation)
# write.table(Segmentation_after_imputation,'Segmentation_after_imputation.csv',row.names=FALSE,col.names=TRUE,sep=",")

# Starting revenue as revenue of the customer, resulting LTV is too high ! Ratio over 1000
# CustomerData$ARPC=as.numeric(CustomerData$`Starting Revenue`)
# ###---------------------------------------------------------------------------------------------------
# Using Month to
# Revenue per customer each month
# for(i in seq(1,12,1)){CustomerData$Revenue[CustomerData$Month_new==i]=Cost_bymonth/count(CustomerData[Month_new==i])}
# CustomerData$Revenue=as.numeric(CustomerData$Revenue)
# ###---------------------------------------------------------------------------------------------------
# MRR permonth as revenue of the customer
# CustomerData$ARPC=as.numeric(CustomerData$Revenue)
# CustomerData$Gross_margin=(CustomerData$ARPC-CustomerData$Cost)/CustomerData$ARPC

# CustomerData$LTV=CustomerData$ARPC*CustomerData$Gross_margin/(1-CustomerData$Retention_Rate)
# CustomerData$CAC=CustomerData$Cost
# CustomerData$health_ratio=CustomerData$LTV/CustomerData$CAC

# Customer number
# Customer_number=nrow(CustomerData)
# #ARPC
# ARPC=Total_revenue/Customer_number
# Gross_margin=(Total_revenue-Total_cost)/Total_revenue
# 
# LTV=ARPC*Gross_margin/(1-Retention_Rate)
# CAC=Total_cost/Customer_number
# 
# LTVtoCAC=LTV/CAC

train=Segmentation_after_imputation[,.(Country,CompanySize,Month_new,health_ratio)]
train$Country=as.factor(train$Country)
train$CompanySize=as.factor(train$CompanySize)
train$Month_new=as.numeric(train$Month_new)

# Fit the models
# Linear Regression
LR.model <- lm(health_ratio~.,data= train)
summary(LR.model) # show results

# multilinear Regression
require(nnet)
multilinear.model <-multinom(health_ratio~.,data= train)
multilinear.model$vcoefnames
# summary(multilinear.model)

# Decision Tree
library(rpart)
Tree.model=rpart(health_ratio~.,data= train,cp=0)
summary(Tree.model)
library(rattle)
fancyRpartPlot(Tree.model)

# Random Forest
library(randomForest)
RF.model=randomForest(health_ratio~.,data= train,ntree=200)
summary(RF.model)
importance(RF.model)
varImpPlot(RF.model)
